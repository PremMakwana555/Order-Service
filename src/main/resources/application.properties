# Application Configuration
spring.application.name=order-service
server.port=8080

# Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/order_service_db?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.open-in-view=false

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration

# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=order-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3

# Kafka Topics
kafka.topics.orders-events=orders.events
kafka.topics.orders-commands=orders.commands
kafka.topics.payments-commands=payments.commands
kafka.topics.payments-events=payments.events
kafka.topics.notifications-commands=notifications.commands

# Redis Configuration
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.timeout=60000

# Resilience4j Circuit Breaker
resilience4j.circuitbreaker.instances.payment-service.sliding-window-size=10
resilience4j.circuitbreaker.instances.payment-service.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.payment-service.wait-duration-in-open-state=10000
resilience4j.circuitbreaker.instances.payment-service.permitted-number-of-calls-in-half-open-state=3

# Resilience4j Retry
resilience4j.retry.instances.payment-service.max-attempts=3
resilience4j.retry.instances.payment-service.wait-duration=1000
resilience4j.retry.instances.payment-service.enable-exponential-backoff=true
resilience4j.retry.instances.payment-service.exponential-backoff-multiplier=2

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.metrics.export.prometheus.enabled=true

# Logging
logging.level.com.ecommerce.order_service=DEBUG
logging.level.org.springframework.kafka=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} [%X{correlationId}] [%X{sagaId}] - %msg%n

